{
  "version": 3,
  "sources": ["../../textarea-caret/index.js"],
  "sourcesContent": ["/* jshint browser: true */\n\n(function () {\n\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if (!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if (el) el.parentNode.removeChild(el);\n  }\n\n  // The mirror div will replicate the textarea's style\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n  var isInput = element.nodeName === 'INPUT';\n\n  // Default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (!isInput)\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // Position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // Transfer the element's properties to the div\n  properties.forEach(function (prop) {\n    if (isInput && prop === 'lineHeight') {\n      // Special case for <input>s because text is rendered centered and line height may be != height\n      style.lineHeight = computed.height;\n    } else {\n      style[prop] = computed[prop];\n    }\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // The second special handling for input type=\"text\" vs textarea:\n  // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (isInput)\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // For inputs, just '.' would be enough, but no need to bother.\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n    height: parseInt(computed['lineHeight'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\nif (typeof module != 'undefined' && typeof module.exports != 'undefined') {\n  module.exports = getCaretCoordinates;\n} else if(isBrowser) {\n  window.getCaretCoordinates = getCaretCoordinates;\n}\n\n}());\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,KAAC,WAAY;AAMb,UAAI,aAAa;AAAA,QACf;AAAA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,QAGA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,MAEF;AAEA,UAAI,YAAa,OAAO,WAAW;AACnC,UAAI,YAAa,aAAa,OAAO,mBAAmB;AAExD,eAAS,oBAAoB,SAAS,UAAU,SAAS;AACvD,YAAI,CAAC,WAAW;AACd,gBAAM,IAAI,MAAM,gFAAgF;AAAA,QAClG;AAEA,YAAI,QAAQ,WAAW,QAAQ,SAAS;AACxC,YAAI,OAAO;AACT,cAAI,KAAK,SAAS,cAAc,2CAA2C;AAC3E,cAAI;AAAI,eAAG,WAAW,YAAY,EAAE;AAAA,QACtC;AAGA,YAAI,MAAM,SAAS,cAAc,KAAK;AACtC,YAAI,KAAK;AACT,iBAAS,KAAK,YAAY,GAAG;AAE7B,YAAI,QAAQ,IAAI;AAChB,YAAI,WAAW,OAAO,mBAAmB,OAAO,iBAAiB,OAAO,IAAI,QAAQ;AACpF,YAAI,UAAU,QAAQ,aAAa;AAGnC,cAAM,aAAa;AACnB,YAAI,CAAC;AACH,gBAAM,WAAW;AAGnB,cAAM,WAAW;AACjB,YAAI,CAAC;AACH,gBAAM,aAAa;AAGrB,mBAAW,QAAQ,SAAU,MAAM;AACjC,cAAI,WAAW,SAAS,cAAc;AAEpC,kBAAM,aAAa,SAAS;AAAA,UAC9B,OAAO;AACL,kBAAM,IAAI,IAAI,SAAS,IAAI;AAAA,UAC7B;AAAA,QACF,CAAC;AAED,YAAI,WAAW;AAEb,cAAI,QAAQ,eAAe,SAAS,SAAS,MAAM;AACjD,kBAAM,YAAY;AAAA,QACtB,OAAO;AACL,gBAAM,WAAW;AAAA,QACnB;AAEA,YAAI,cAAc,QAAQ,MAAM,UAAU,GAAG,QAAQ;AAGrD,YAAI;AACF,cAAI,cAAc,IAAI,YAAY,QAAQ,OAAO,GAAQ;AAE3D,YAAI,OAAO,SAAS,cAAc,MAAM;AAMxC,aAAK,cAAc,QAAQ,MAAM,UAAU,QAAQ,KAAK;AACxD,YAAI,YAAY,IAAI;AAEpB,YAAI,cAAc;AAAA,UAChB,KAAK,KAAK,YAAY,SAAS,SAAS,gBAAgB,CAAC;AAAA,UACzD,MAAM,KAAK,aAAa,SAAS,SAAS,iBAAiB,CAAC;AAAA,UAC5D,QAAQ,SAAS,SAAS,YAAY,CAAC;AAAA,QACzC;AAEA,YAAI,OAAO;AACT,eAAK,MAAM,kBAAkB;AAAA,QAC/B,OAAO;AACL,mBAAS,KAAK,YAAY,GAAG;AAAA,QAC/B;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,UAAU,eAAe,OAAO,OAAO,WAAW,aAAa;AACxE,eAAO,UAAU;AAAA,MACnB,WAAU,WAAW;AACnB,eAAO,sBAAsB;AAAA,MAC/B;AAAA,IAEA,GAAE;AAAA;AAAA;",
  "names": []
}
